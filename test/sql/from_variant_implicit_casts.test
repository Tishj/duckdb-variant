# name: test/sql/from_variant_implicit_casts.test
# group: [sql]

require variant

require json

# VARIANT(INT32) -> INTEGER
query I
select ['test', 'hello', 'world'][1::VARIANT::INTEGER]
----
test

# VARIANT(INT32) -> BIGINT
query I
select ['test', 'hello', 'world'][1::VARIANT]
----
test

# VARIANT(INT64) -> BIGINT
query I
select ['test', 'hello', 'world'][1::BIGINT::VARIANT]
----
test

# VARIANT(VARCHAR) -> BOOL
query I
select 'true'::VARIANT::BOOL;
----
true

# VARIANT(OBJECT('a': VARCHAR)) -> STRUCT(a BOOLEAN)
query I
select {'a': 'true'}::VARIANT::STRUCT(a BOOLEAN);
----
{'a': true}

# VARIANT(OBJECT('a': VARCHAR)) -> STRUCT(a BOOLEAN)
statement error
select {'a': 'lalala'}::VARIANT::STRUCT(a BOOLEAN);
----
Invalid Input Error: Failed to cast value: Could not convert string 'lalala' to BOOL

# VARIANT(OBJECT('a': VARCHAR)) -> STRUCT(a BOOLEAN)
statement error
select {'b': 42, 'a': 'lalala', 'c': {'a': 'test'}}::VARIANT::STRUCT(a BOOLEAN);
----
Invalid Input Error: Failed to cast value: Could not convert string 'lalala' to BOOL

# VARIANT(OBJECT('a': VARCHAR)) -> STRUCT(a BOOLEAN)
statement error
select {'b': 42, 'a': 'lalala', 'c': {'a': 'test'}}::VARIANT::STRUCT(a BOOLEAN);
----
Invalid Input Error: Failed to cast value: Could not convert string 'lalala' to BOOL

# VARIANT(TIMESTAMP_MICROS) -> TIMESTAMP
query I
select '2019/03/21'::TIMESTAMP::VARIANT::TIMESTAMP;
----
2019-03-21 00:00:00

# Direct conversion
query I
select '0.123456789'::DECIMAL(10,9)::VARIANT::DECIMAL(10,9)
----
0.123456789

# Fallback conversion using Value
query I
select '0.123456789'::DECIMAL(10,9)::VARIANT::DECIMAL(10,8)
----
0.12345679

# Direct conversion from VARIANT(BLOB) -> BLOB
query I
select 'thisisalongblob\x00withnullbytes'::BLOB::VARIANT::BLOB;
----
thisisalongblob\x00withnullbytes

# Fallback conversion from VARIANT(BLOB) -> VARCHAR
query I
select 'thisisalongblob\x00withnullbytes'::BLOB::VARIANT::VARCHAR;
----
thisisalongblob\x00withnullbytes

# Added a fallback for nested types as well
query I
select {'a': '[1, 2, 3, 4]'}::VARIANT::STRUCT(a INTEGER[])
----
{'a': [1, 2, 3, 4]}

# Added a fallback for nested types as well
query I
select {'a': ['1', '2', '3', '4']}::VARIANT::STRUCT(a INTEGER[])
----
{'a': [1, 2, 3, 4]}
